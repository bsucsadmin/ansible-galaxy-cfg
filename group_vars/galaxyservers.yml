---
# Galaxy
galaxy_create_user: true # False by default, as e.g. you might have a 'galaxy' user provided by LDAP or AD.
galaxy_separate_privileges: true # Best practices for security, configuration is owned by 'root' (or a different user) than the processes
galaxy_manage_paths: true # False by default as your administrator might e.g. have root_squash enabled on NFS. Here we can create the directories so it's fine.
galaxy_manage_cleanup: true
galaxy_layout: root-dir
galaxy_root: /opt/ohpc/pub/srv/galaxy
galaxy_user: {name: "{{ galaxy_user_name }}", shell: /bin/bash}
galaxy_commit_id: v24.1.3 
galaxy_force_checkout: true
miniconda_prefix: "{{ galaxy_tool_dependency_dir }}/_conda"
miniconda_version: 24.11.1 
miniconda_channels: ['conda-forge', 'bioconda', 'defaults']
galaxy_additional_venv_packages:
  - ldap3
  - redis

# Galaxy Job Configuration
galaxy_job_config:
  runners:
    local_runner:
      load: galaxy.jobs.runners.local:LocalJobRunner
      workers: 4
  handling:
    assign: ['db-skip-locked']
  execution:
    default: singularity
    environments:
      local_env:
        runner: local_runner
        tmp_dir: true
      singularity:
        runner: local_runner
        singularity_enabled: true
        env:
        # Ensuring a consistent collation environment is good for reproducibility.
        - name: LC_ALL
          value: C
        # The cache directory holds the docker containers that get converted
        - name: APPTAINER_CACHEDIR
          value: /tmp/singularity
        # Apptainer uses a temporary directory to build the squashfs filesystem
        - name: APPTAINER_TMPDIR
          value: /tmp
  tools:
    - class: local # these special tools that aren't parameterized for remote execution - expression tools, upload, etc
      environment: local_env

galaxy_config:
  galaxy:
    galaxy_url_prefix: /galaxy
    brand: Ball State Galaxy ðŸš€
    logo_src: "https://cdn.freebiesupply.com/logos/thumbs/2x/ball-state-university-logo.png"
    themes_config_file: "{{ galaxy_config_dir }}/themes.yml"
    # Main Configuration
    auth_config_file: auth_conf.xml
    admin_users:
    - psdavis@bsu.edu
    - haren.eshwaran@bsu.edu
    cleanup_job: onsuccess
    database_connection: "postgresql:///{{ galaxy_db_name }}?host=/var/run/postgresql"
    file_path: /share/data/datasets
    job_working_directory: /share/data/jobs
    object_store_store_by: uuid
    id_secret: "{{ vault_id_secret }}"
    job_config: "{{ galaxy_job_config }}" # Use the variable we defined above
    # TUS
    galaxy_infrastructure_url: "http://{{ inventory_hostname }}/galaxy"
    tus_upload_store: "{{ galaxy_tus_upload_store }}"
    # CVMFS
    tool_data_table_config_path: /cvmfs/data.galaxyproject.org/byhand/location/tool_data_table_conf.xml,/cvmfs/data.galaxyproject.org/managed/location/tool_data_table_conf.xml
    # Tool Dependencies
    dependency_resolvers_config_file: "{{ galaxy_config_dir }}/dependency_resolvers_conf.xml"
    #dependency_resolvers:
    #  - type: conda
    #    versionless: false
    #    prefix: "{{miniconda_prefix}}"
    #    auto_install: true
    #  - type: tool_shed_packages  
    container_resolvers_config_file: "{{ galaxy_config_dir }}/container_resolvers_conf.yml"
    # Data Library Directories
    library_import_dir: /libraries/admin
    user_library_import_dir: /libraries/user
    # Celery
    celery_conf:
      result_backend: "redis://localhost:6379/0"
    enable_celery_tasks: true
    # Monitoring
    statsd_host: localhost
    statsd_influxdb: true
    # FTP
    ftp_upload_dir: /share/data/uploads
    ftp_upload_site: "{{ inventory_hostname }}"
  gravity:
    process_manager: systemd
    galaxy_root: "{{ galaxy_root }}/server"
    galaxy_user: "{{ galaxy_user_name }}"
    virtualenv: "{{ galaxy_venv_dir }}"
    gunicorn:
      # listening options
      bind: "unix:{{ galaxy_mutable_config_dir }}/gunicorn.sock"
      # performance options
      workers: 2
      # Other options thaill be passed to gunicorn
      # This permits setting of 'secure' headers like REMOTE_USER (and friends)
      # https://docs.gunicorn.org/en/stable/settings.html#forwarded-allow-ips
      extra_args: '--forwarded-allow-ips="*"'
      # This lets Gunicorn start Galaxy completely before forking which is faster.
      # https://docs.gunicorn.org/en/stable/settings.html#preload-app
      preload: true
    celery:
      concurrency: 2
      enable_beat: true
      enable: true
      queues: celery,galaxy.internal
      pool: threads
      memory_limit: 2
      loglevel: DEBUG
    tusd:
      enable: true
      tusd_path: /usr/local/sbin/tusd
      upload_dir: "{{ galaxy_tus_upload_store }}"
    handlers:
      handler:
        processes: 2
        pools:
          - job-handlers
          - workflow-schedulers
    reports:
      enable: true
      url_prefix: /reports
      bind: "unix:{{ galaxy_mutable_config_dir }}/reports.sock"
      config_file: "{{ galaxy_config_dir }}/reports.yml"

galaxy_config_files_public:
  - src: files/galaxy/welcome.html
    dest: "{{ galaxy_mutable_config_dir }}/welcome.html"

galaxy_config_files:
  - src: files/galaxy/themes.yml
    dest: "{{ galaxy_config.galaxy.themes_config_file }}"

galaxy_config_templates:
  - src: templates/galaxy/config/container_resolvers_conf.yml.j2
    dest: "{{ galaxy_config.galaxy.container_resolvers_config_file }}"
  - src: templates/galaxy/config/auth_conf.xml
    dest:  "{{ galaxy_config_dir }}/auth_conf.xml"
  - src: templates/httpd/galaxy.conf.j2
    dest: "/etc/httpd/conf.d/galaxy.conf"
  - src: templates/galaxy/config/reports.yml
    dest: "{{ galaxy_config.gravity.reports.config_file }}"  
#  - src: templates/galaxy/config/dependency_resolvers_conf.xml
#    dest: "{{ galaxy_config.galaxy.dependency_resolvers_config_file }}"

galaxy_extra_dirs:
  - /share/data

# TUS
galaxy_tusd_port: 1080
galaxy_tus_upload_store: /share/data/tus

# Flower
flower_python_version: python3
flower_app_dir: "{{ galaxy_root }}"
flower_python_path: "{{ galaxy_root }}/server/lib"
flower_venv_dir: "{{ galaxy_venv_dir }}"
flower_app_name: galaxy.celery
flower_db_file: "{{ galaxy_root }}/var/flower.db"
flower_persistent: true
flower_broker_api: "https://flower:{{ vault_rabbitmq_password_flower }}@localhost:5671/api/"
flower_broker_url: "amqp://flower:{{ vault_rabbitmq_password_flower }}@localhost:5671/galaxy_internal?ssl=true"
flower_proxy_prefix: /flower

flower_ui_users:
  - name: admin
    password: "{{ vault_flower_user_password}}"

flower_environment_variables:
  GALAXY_CONFIG_FILE: "{{ galaxy_config_file }}"

# Telegraf
telegraf_plugins_extra:
  listen_galaxy_routes:
    plugin: "statsd"
    config:
      - service_address = ":8125"
      - metric_separator = "."
      - allowed_pending_messages = 10000
  monitor_galaxy_queue:
    plugin: "exec"
    config:
      - commands = ["/usr/bin/env PGDATABASE=galaxy /usr/local/bin/gxadmin iquery queue-overview --short-tool-id"]
      - timeout = "10s"
      - data_format = "influx"
      - interval = "15s"

# Proftpd:
proftpd_galaxy_auth: yes
galaxy_ftp_upload_dir: "{{ galaxy_config.galaxy.ftp_upload_dir }}"
proftpd_display_connect: |
  {{ inventory_hostname }} FTP server
proftpd_galaxy_modules:
    - mod_sql.c
    - mod_sql_passwd.c
    - mod_sql_postgres.c
proftpd_galaxy_default_options:
    - AuthOrder: mod_sql.c, mod_sql_postgress.c, mod_sql_passwd.c
#  Unauthorized access is prohibited
proftpd_create_ftp_upload_dir: yes
proftpd_options:
  - User: galaxy
  - Group: galaxy
  - Port: 21
proftpd_sql_db: galaxy@/var/run/postgresql
proftpd_sql_user: galaxy
proftpd_conf_ssl_certificate: /etc/letsencrypt/live/csci-galaxtose.dhcp.bsu.edu-0001/fullchain.pem
proftpd_conf_ssl_certificate_key: /etc/letsencrypt/live/csci-galaxtose.dhcp.bsu.edu-0001/privkey.pem
proftpd_global_options:
  - PassivePorts: 56000 60000
proftpd_use_mod_tls_shmcache: false
proftpd_tls_options: NoSessionReuseRequired

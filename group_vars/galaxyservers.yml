---
# Galaxy
galaxy_create_user: true # False by default, as e.g. you might have a 'galaxy' user provided by LDAP or AD.
galaxy_separate_privileges: true # Best practices for security, configuration is owned by 'root' (or a different user) than the processes
galaxy_manage_paths: true # False by default as your administrator might e.g. have root_squash enabled on NFS. Here we can create the directories so it's fine.
galaxy_manage_cleanup: true
galaxy_layout: root-dir
galaxy_root: /opt/ohpc/pub/srv/galaxy
galaxy_data_dir: /share/data/galaxy
galaxy_user: { name: "{{ galaxy_user_name }}", shell: /bin/bash }
galaxy_user_upload_dir: /share/data/galaxy-upload
galaxy_commit_id: v25.0.2
galaxy_force_checkout: true
miniconda_prefix: "{{ galaxy_tool_dependency_dir }}/_conda"
miniconda_version: 25.1.1
miniconda_channels: ["conda-forge", "bioconda", "defaults"]
galaxy_additional_venv_packages:
  - ldap3
  - redis

# Galaxy Job Configuration
galaxy_job_config:
  runners:
    local_runner:
      load: galaxy.jobs.runners.local:LocalJobRunner
      workers: 4
    slurm:
      load: galaxy.jobs.runners.slurm:SlurmJobRunner
      drmaa_library_path: /usr/lib64/libdrmaa.so
  handling:
    assign: ["db-skip-locked"]
  execution:
    default: tpv_dispatcher
#    default: local_env
    environments:
      local_env:
        runner: local_runner
        tmp_dir: true
      tpv_dispatcher:
        runner: dynamic
        type: python
        function: map_tool_to_destination
        rules_module: tpv.rules
        tpv_config_files:
          - https://gxy.io/tpv/db.yml
          - "{{ tpv_config_dir }}/tpv_rules_local.yml"          
  tools:
    - class: local # these special tools that aren't parameterized for remote execution - expression tools, upload, etc
      environment: local_env

galaxy_config:
  galaxy:
    log_level: INFO
    upstream_gzip: true
    apache_xsendfile: true
    galaxy_url_prefix: /galaxy
    brand: Ball State Galaxy üß¨üî¨üöÄüê¶
    logo_src: "https://cdn.freebiesupply.com/logos/thumbs/2x/ball-state-university-logo.png"
    themes_config_file: "{{ galaxy_config_dir }}/themes.yml"
    # Main Configuration
    auth_config_file: auth_conf.xml
    admin_users:
      - psdavis@bsu.edu
      - haren.eshwaran@bsu.edu
    cleanup_job: onsuccess
    database_connection: "postgresql://{{ galaxy_user_name }}:{{ galaxy_postgress_password }}/{{ galaxy_db_name }}?host=/var/run/postgresql"
    file_path: "{{ galaxy_data_dir }}/datasets"
    job_working_directory: "{{ galaxy_data_dir }}/jobs"
    object_store_store_by: uuid
    id_secret: "{{ vault_id_secret }}"
    # Sanitize Tool Output
    sanitize_allowlist_file: sanitize_allowlist.txt
    # Tool security
    outputs_to_working_directory: true
    new_user_dataset_access_role_default_private: true # Make datasets private by default
    # TUS
    galaxy_infrastructure_url: "http://{{ inventory_hostname }}/galaxy"
    tus_upload_store: "{{ galaxy_tus_upload_store }}"
    # CVMFS
    tool_data_table_config_path: /cvmfs/data.galaxyproject.org/byhand/location/tool_data_table_conf.xml,/cvmfs/data.galaxyproject.org/managed/location/tool_data_table_conf.xml
    # Data Library Directories
    library_import_dir: "{{ galaxy_data_dir }}/libraries/admin"
    user_library_import_dir: "{{ galaxy_user_upload_dir }}"
    user_library_import_dir_auto_creation: true
    # Celery
    amqp_internal_connection: "pyamqp://galaxy:{{ vault_rabbitmq_password_galaxy }}@localhost:5671/galaxy_internal?ssl=1"
    celery_conf:
      result_backend: "redis://localhost:6379/0"
    enable_celery_tasks: true
    # Monitoring
    statsd_host: localhost
    statsd_influxdb: true
    # Job config placement
    job_config: "{{ galaxy_job_config }}"
    # Tool Dependencies
    dependency_resolvers_config_file: "{{ galaxy_config_dir }}/dependency_resolvers_conf.yml"
    container_resolvers_config_file: "{{ galaxy_config_dir }}/container_resolvers_conf.yml"

  gravity:
    log_level: INFO
    process_manager: systemd
    galaxy_root: "{{ galaxy_root }}/server"
    galaxy_user: "{{ galaxy_user_name }}"
    virtualenv: "{{ galaxy_venv_dir }}"
    gunicorn:
      # listening options
      bind: "unix:{{ galaxy_mutable_config_dir }}/gunicorn.sock"
      # performance options
      workers: 2
      # Other options thaill be passed to gunicorn
      # This permits setting of 'secure' headers like REMOTE_USER (and friends)
      # https://docs.gunicorn.org/en/stable/settings.html#forwarded-allow-ips
      extra_args: '--forwarded-allow-ips="*"'
      # This lets Gunicorn start Galaxy completely before forking which is faster.
      # https://docs.gunicorn.org/en/stable/settings.html#preload-app
      preload: true
    celery:
      concurrency: 2
      enable_beat: true
      enable: true
      queues: celery,galaxy.internal
      pool: threads
      memory_limit: 2
      loglevel: INFO
    tusd:
      enable: true
      tusd_path: /usr/local/sbin/tusd
      upload_dir: "{{ galaxy_tus_upload_store }}"
    handlers:
      handler:
        processes: 2
        pools:
          - job-handlers
          - workflow-schedulers
    reports:
      enable: true
      url_prefix: /reports
      bind: "unix:{{ galaxy_mutable_config_dir }}/reports.sock"
      config_file: "{{ galaxy_config_dir }}/reports.yml"

galaxy_job_config_file: "{{ galaxy_config_dir }}/galaxy.yml"

galaxy_config_files_public:
  - src: files/galaxy/welcome.html
    dest: "{{ galaxy_server_dir }}/static/welcome.html"
  - src: files/galaxy/tool_data/sift_db.loc
    dest: "{{ galaxy_root }}/var/tool_data/sift_db.loc"
    force: no

galaxy_config_files:
  - src: files/galaxy/themes.yml
    dest: "{{ galaxy_config.galaxy.themes_config_file }}"
  - src: files/galaxy/config/tpv_rules_local.yml
    dest: "{{ tpv_mutable_dir }}/tpv_rules_local.yml"
  - src: files/galaxy/config/sanitize_allowlist.txt
    dest: "{{ galaxy_config_dir }}/sanitize_allowlist.txt"

galaxy_config_templates:
  - src: templates/galaxy/config/dependency_resolvers_conf.yml.j2
    dest: "{{ galaxy_config.galaxy.dependency_resolvers_config_file }}"
  - src: templates/galaxy/config/container_resolvers_conf.yml.j2
    dest: "{{ galaxy_config.galaxy.container_resolvers_config_file }}"
  - src: templates/galaxy/config/auth_conf.xml
    dest: "{{ galaxy_config_dir }}/auth_conf.xml"
  - src: templates/httpd/galaxy.conf.j2
    dest: "/etc/httpd/conf.d/galaxy.conf"
  - src: templates/galaxy/config/reports.yml
    dest: "{{ galaxy_config.gravity.reports.config_file }}"

galaxy_extra_dirs:
  - "{{ galaxy_data_dir }}"
  - "{{ galaxy_config_dir }}/{{ tpv_config_dir_name }}"
  - "{{ galaxy_user_upload_dir }}"

galaxy_extra_privsep_dirs:
  - "{{ tpv_mutable_dir }}"
tpv_privsep: true

# TUS
galaxy_tusd_port: 1080
galaxy_tus_upload_store: "{{ galaxy_data_dir }}/tus"

# Certbot
certbot_testmode: false
certbot_dir: /opt/certbot-env
certbot_admin_email: "{{ vault_letsencrypt_email }}"
certbot_auto_renew_hour: "{{ 23 |random(seed=inventory_hostname)  }}"
certbot_auto_renew_minute: "{{ 59 |random(seed=inventory_hostname)  }}"
certbot_auth_method: --authenticator edgedns --edgedns-credentials /etc/letsencrypt/bsu.ini
certbot_install_method: virtualenv
certbot_auto_renew: yes
certbot_auto_renew_user: root
certbot_environment: production 
certbot_well_known_root: /var/www/html
certbot_share_key_users:
  - apache
certbot_share_key_ids:
  - "999:999"
certbot_post_renewal: |
    systemctl restart httpd || true
    docker restart rabbit_hole || true
certbot_domains:
 - "{{ inventory_hostname }}"
certbot_agree_tos: --agree-tos

#Install pip docker package for ansible
pip_install_packages:
  - name: docker
# RabbitMQ
rabbitmq_container:
  name: rabbit_hole
  image: rabbitmq:3.11-management
  hostname: "{{ inventory_hostname }}"

rabbitmq_plugins:
  - rabbitmq_management

rabbitmq_config:
  listeners:
    tcp: none
  ssl_listeners:
    default: 5671
  ssl_options:
    verify: verify_peer
    cacertfile: /etc/ssl/certs/fullchain.pem
    certfile: /etc/ssl/certs/cert.pem
    keyfile: /etc/ssl/user/privkey-999:999.pem
    fail_if_no_peer_cert: 'false'
  management_agent:
    disable_metrics_collector: "false"
  management:
    disable_stats: 'false'
  consumer_timeout: 21600000 # 6 hours in milliseconds

rabbitmq_vhosts:
  - /pulsar/pulsar_au

rabbitmq_users:
  - user: admin
    password: "{{ vault_rabbitmq_admin_password }}"
    tags: administrator
    vhost: /
  - user: galaxy
    password: "{{ vault_rabbitmq_password_galaxy }}"
    vhost: galaxy_internal
